{"version":3,"sources":["logo.svg","components/maps.js","components/Search.js","utils/api.js","components/form.js","components/modal.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","mapStyles","width","height","MapContainer","google","this","props","zoom","style","initialCenter","lat","lng","Component","GoogleApiWrapper","apiKey","process","Search","Form","Group","controlId","Control","type","placeholder","Button","variant","friendData","axios","put","AddForm","handleChange","useState","name","setName","email","setEmail","show","setShow","address","setAddress","e","a","preventDefault","console","log","api","Label","onChange","target","value","Check","label","onClick","AddYourself","Modal","size","aria-labelledby","centered","Header","Title","id","Body","Footer","onHide","AddModal","React","modalShow","setModalShow","block","App","className","src","logo","alt","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2c22367a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";","\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={2.5}\n        style={mapStyles}\n        initialCenter={\n          {\n            // lat: -1.2884,\n            // lng: 36.8233\n            lat: -1.2884,\n            lng: 9.2266\n          }\n        }\n      />\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_APIKEY\n})(MapContainer);\n\n// function GoogleMaps() {\n//     return (\n//         <div>\n\n//         </div>\n//     )\n\n// }","import React from \"react\"\nimport { Button, Form } from \"react-bootstrap\"\n\nfunction Search() {\n    return (\n    <div>\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Control type=\"name\" placeholder=\"Find Someone\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n</div>\n    )\n}\n\nexport default Search;","import axios from \"axios\";\n\nexport default {\n\nsaveFriend: function (friendData) {\n    return axios.put(\"/api/friends\", friendData);\n  },\n  getFriends: function () {\n    return axios.get(\"/api/friends\");\n  },\n}\n","import React, { useState } from \"react\"\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport api from '../utils/api'\n\nfunction AddForm({ handleChange }) {\n        const [name, setName] = useState(\"\")\n        const [email, setEmail] = useState(\"\")\n        const [show, setShow] = useState(\"\")\n        const [address, setAddress] = useState(\"\")\n      \n        async function AddYourself(e) {\n          e.preventDefault();\n          console.log(\"Friend Data: \", name, email, show, address)\n        \n            api.saveFriend(name, email, show, address)\n           \n            }\n        \n    \n        \n      \n    return (\n<Form>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Name</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter your name\" onChange={(e) => setName(e.target.value)} value={name}/>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={email}/>\n  </Form.Group>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Which show were you on?</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Show\" onChange={(e) => setShow(e.target.value)} value={show}/>\n  </Form.Group>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Where are you located?</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Address\" onChange={(e) => setAddress(e.target.value)} value={address}/>\n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\" onClick={AddYourself}\n>\n    Submit\n  </Button>\n</Form>\n    )}\n\nexport default AddForm;","import React from \"react\"\nimport AddForm from './form'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nfunction AddYourself(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Yourself!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Enter Your Info:</h4>\n        <AddForm />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n  \n  function AddModal() {\n    const [modalShow, setModalShow] = React.useState(false);\n  \n    return (\n      <>\n        <Button variant=\"primary\" size=\"lg\" block onClick={() => setModalShow(true)}>\n          Add Yourself!\n        </Button>\n  \n        <AddYourself\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n        />\n      </>\n    );\n  }\n  \n//   render(<AddModal />);\n\n  export default AddModal;","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport GoogleApiWrapper from \"./components/maps\"\nimport Search from \"./components/Search\";\nimport AddModal from \"./components/modal\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>Cirque Finder</h2>\n      </div>\n      <AddModal />\n      <Search />\n      <GoogleApiWrapper />\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}